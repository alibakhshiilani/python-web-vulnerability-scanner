import itertools

def load_payloads(payload):
    with open(payload, 'r') as f:
        return f.read().splitlines()

def load_sql_injection_payloads():
    with open('payloads/sql_injection.txt', 'r') as f:
        return f.read().splitlines()

def load_xss_payloads():
    with open('payloads/xss.txt', 'r') as f:
        return f.read().splitlines()

def load_lfi_payloads():
    with open('payloads/lfi.txt', 'r') as f:
        return f.read().splitlines()

def load_rce_payloads():
    with open('payloads/rce.txt', 'r') as f:
        return f.read().splitlines()

def is_sql_injection_vulnerable(response_text):
    if 'SQL syntax' in response_text or 'mysql_fetch' in response_text:
        return True
    return False

def is_xss_vulnerable(response_text):
    if '<script>' in response_text or '<img' in response_text or '<svg' in response_text:
        return True
    return False

def is_lfi_vulnerable(response_text):
    if 'root:' in response_text or 'nobody:' in response_text:
        return True
    return False

def is_rce_vulnerable(response_text):
    if 'uid=' in response_text or 'gid=' in response_text or 'groups=' in response_text:
        return True
    return False

def generate_payloads(base_payload, chars):
    payloads = []
    for length in range(1, 5):
        for combination in itertools.product(chars, repeat=length):
            payload = base_payload.format(''.join(combination))
            payloads.append(payload)
    return payloads