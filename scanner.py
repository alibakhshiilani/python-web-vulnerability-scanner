import requests
from payloads import *
from reporter import report_vulnerability, generate_report

class scanner :
    def __init__(self, url):
        self.url = url
        

    def scan(self,url):
        sql_payloads = load_sql_injection_payloads()
        xss_payloads = load_xss_payloads()
        lfi_payloads = load_lfi_payloads()
        rce_payloads = load_rce_payloads()

        self.test_payloads(url,sql_payloads, 'sql_injection')
        self.test_payloads(url,xss_payloads, 'xss') 
        self.test_payloads(url,lfi_payloads, 'lfi')
        self.test_payloads(url,rce_payloads, 'rce')
    
        generate_report()  


    def test_payloads(url,payloads, vuln_type):
        for payload in payloads:
            response = requests.get(url + payload)

            if vuln_type == 'sql_injection' and is_sql_injection_vulnerable(response.text):
                report_vulnerability(vuln_type, payload, 'GET', response.text)

            elif vuln_type == 'xss' and is_xss_vulnerable(response.text):
                report_vulnerability(vuln_type, payload, 'GET', response.text)  

            elif vuln_type == 'lfi' and is_lfi_vulnerable(response.text):
                report_vulnerability(vuln_type, payload, 'GET', response.text)

            elif vuln_type == 'rce' and is_rce_vulnerable(response.text):         
                report_vulnerability(vuln_type, payload, 'GET', response.text)

